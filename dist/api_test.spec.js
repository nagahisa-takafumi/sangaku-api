"use strict";
/**
 * sangaku
 * 産学連携のAPIです
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const api = __importStar(require("./api"));
const config = {};
describe("BreweryApi", () => {
    let instance;
    beforeEach(function () {
        instance = new api.BreweryApi(config);
    });
    test("getBreweryDetail", () => {
        const id = undefined;
        return expect(instance.getBreweryDetail(id, {})).resolves.toBe(null);
    });
    test("getBreweryList", () => {
        return expect(instance.getBreweryList({})).resolves.toBe(null);
    });
    test("searchBreweryList", () => {
        const keyword = undefined;
        return expect(instance.searchBreweryList(keyword, {})).resolves.toBe(null);
    });
});
describe("SakeApi", () => {
    let instance;
    beforeEach(function () {
        instance = new api.SakeApi(config);
    });
    test("getSakeDetail", () => {
        const sakeId = undefined;
        return expect(instance.getSakeDetail(sakeId, {})).resolves.toBe(null);
    });
    test("getSakeList", () => {
        return expect(instance.getSakeList({})).resolves.toBe(null);
    });
    test("searchSakeList", () => {
        const keyword = undefined;
        return expect(instance.searchSakeList(keyword, {})).resolves.toBe(null);
    });
});
//# sourceMappingURL=api_test.spec.js.map