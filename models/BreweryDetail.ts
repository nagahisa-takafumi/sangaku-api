/* tslint:disable */
/* eslint-disable */
/**
 * sangaku
 * 産学連携のAPIです
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Sake2 } from './Sake2';
import {
    Sake2FromJSON,
    Sake2FromJSONTyped,
    Sake2ToJSON,
} from './Sake2';

/**
 * 
 * @export
 * @interface BreweryDetail
 */
export interface BreweryDetail {
    /**
     * 
     * @type {number}
     * @memberof BreweryDetail
     */
    bId: number;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bName: string;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bAddress: string;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bDescription: string;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bMail: string;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bTel: string;
    /**
     * 
     * @type {string}
     * @memberof BreweryDetail
     */
    bImgFilePath: string;
    /**
     * 
     * @type {Array<Sake2>}
     * @memberof BreweryDetail
     */
    sakeList: Array<Sake2>;
}

/**
 * Check if a given object implements the BreweryDetail interface.
 */
export function instanceOfBreweryDetail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "bId" in value;
    isInstance = isInstance && "bName" in value;
    isInstance = isInstance && "bAddress" in value;
    isInstance = isInstance && "bDescription" in value;
    isInstance = isInstance && "bMail" in value;
    isInstance = isInstance && "bTel" in value;
    isInstance = isInstance && "bImgFilePath" in value;
    isInstance = isInstance && "sakeList" in value;

    return isInstance;
}

export function BreweryDetailFromJSON(json: any): BreweryDetail {
    return BreweryDetailFromJSONTyped(json, false);
}

export function BreweryDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): BreweryDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bId': json['B_id'],
        'bName': json['B_name'],
        'bAddress': json['B_address'],
        'bDescription': json['B_description'],
        'bMail': json['B_mail'],
        'bTel': json['B_tel'],
        'bImgFilePath': json['B_img_file_path'],
        'sakeList': ((json['sake_list'] as Array<any>).map(Sake2FromJSON)),
    };
}

export function BreweryDetailToJSON(value?: BreweryDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'B_id': value.bId,
        'B_name': value.bName,
        'B_address': value.bAddress,
        'B_description': value.bDescription,
        'B_mail': value.bMail,
        'B_tel': value.bTel,
        'B_img_file_path': value.bImgFilePath,
        'sake_list': ((value.sakeList as Array<any>).map(Sake2ToJSON)),
    };
}

